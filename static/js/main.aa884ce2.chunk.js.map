{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","handlerStarter","setState","handlerReverse","prevState","handlerSortByAlpha","ALPHABET","handlerSortByLength","LENGTH","handlerReset","this","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","className","Button","variant","color","type","onClick","ButtonGroup","size","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,eAAiB,WACf,EAAKC,SAAS,CAAEL,WAAW,KAR/B,EAWEM,eAAiB,WACf,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC1BN,YAAaM,EAAUN,gBAb7B,EAiBEO,mBAAqB,WACnB,EAAKH,SAAS,CAAEH,SAAUN,EAASa,YAlBvC,EAqBEC,oBAAsB,WACpB,EAAKL,SAAS,CAAEH,SAAUN,EAASe,UAtBvC,EAyBEC,aAAe,WACb,EAAKP,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASO,QA5BzB,4CAgCE,WACE,MAA4CU,KAAKd,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBY,EApEV,SACEA,EACAZ,EACAD,GAEA,IAAMc,EAAY,YAAOD,GAmBzB,OAjBIZ,IAAaN,EAASO,MACxBY,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQhB,GACN,KAAKN,EAASa,SACZ,OAAOQ,EAAME,cAAcD,GAC7B,KAAKtB,EAASe,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXnB,GACFc,EAAaM,UAGRN,EA4CSO,CACZzB,EACAK,EACAD,GAGF,OACE,sBAAKsB,UAAU,MAAf,WACIvB,GACA,cAACwB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,KAAK,SACLJ,UAAU,MACVK,QAASf,KAAKT,eALhB,mBAWDJ,GACC,qCACE,eAAC6B,EAAA,EAAD,CACEC,KAAK,QACL,aAAW,qBACXJ,MAAM,YACND,QAAQ,YAJV,UAME,cAACD,EAAA,EAAD,CACEG,KAAK,SACLJ,UAAU,MACVK,QAASf,KAAKL,mBAHhB,iCAQA,cAACgB,EAAA,EAAD,CACEG,KAAK,SACLJ,UAAU,MACVK,QAASf,KAAKH,oBAHhB,4BAQA,cAACc,EAAA,EAAD,CACEG,KAAK,SACLJ,UAAU,MACVK,QAASf,KAAKP,eAHhB,qBAQA,cAACkB,EAAA,EAAD,CACEG,KAAK,SACLJ,UAAU,MACVK,QAASf,KAAKD,aAHhB,sBAQF,oBAAIW,UAAU,QAAd,SACGT,EAAMiB,KAAI,SAAAC,GACT,OACE,oBACET,UAAU,cADZ,SAIGS,GAFIA,kBApGzB,GAAyBC,aCtDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aa884ce2.chunk.js","sourcesContent":["import ButtonGroup from '@mui/material/ButtonGroup';\nimport { Button } from '@mui/material';\nimport { Component } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handlerStarter = () => {\n    this.setState({ isStarted: true });\n  };\n\n  handlerReverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  handlerSortByAlpha = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handlerSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handlerReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {!isStarted && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"button\"\n            className=\"btn\"\n            onClick={this.handlerStarter}\n          >\n            Start\n          </Button>\n        )}\n\n        {isStarted && (\n          <>\n            <ButtonGroup\n              size=\"large\"\n              aria-label=\"large button group\"\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              <Button\n                type=\"button\"\n                className=\"btn\"\n                onClick={this.handlerSortByAlpha}\n              >\n                Sort alphabetically\n              </Button>\n\n              <Button\n                type=\"button\"\n                className=\"btn\"\n                onClick={this.handlerSortByLength}\n              >\n                Sort by length\n              </Button>\n\n              <Button\n                type=\"button\"\n                className=\"btn\"\n                onClick={this.handlerReverse}\n              >\n                Reverse\n              </Button>\n\n              <Button\n                type=\"button\"\n                className=\"btn\"\n                onClick={this.handlerReset}\n              >\n                Reset\n              </Button>\n            </ButtonGroup>\n            <ul className=\"Goods\">\n              {goods.map(good => {\n                return (\n                  <li\n                    className=\"Goods__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                );\n              })}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}